// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.0.3
//   protoc               v3.12.4
// source: src/protos/location/location.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "location";

export interface UpdateStatusSlotRequest {
  id: number;
  status: string;
}

export interface UpdateStatusSlotResponse {
  id: number;
}

export const LOCATION_PACKAGE_NAME = "location";

export interface LocationServiceClient {
  updateStatusSlot(request: UpdateStatusSlotRequest): Observable<UpdateStatusSlotResponse>;
}

export interface LocationServiceController {
  updateStatusSlot(
    request: UpdateStatusSlotRequest,
  ): Promise<UpdateStatusSlotResponse> | Observable<UpdateStatusSlotResponse> | UpdateStatusSlotResponse;
}

export function LocationServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["updateStatusSlot"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("LocationService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("LocationService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const LOCATION_SERVICE_NAME = "LocationService";
